/*
Deployment script for MyPantry

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "MyPantry"
:setvar DefaultFilePrefix "MyPantry"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
IF EXISTS (SELECT 1
           FROM   [sys].[databases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [sys].[databases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
/*
 Pre-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be executed before the build script.	
 Use SQLCMD syntax to include a file in the pre-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the pre-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

--IF NOT EXISTS(SELECT [Name] FROM [SYS].[DATABASES] WHERE [Name] = 'Pantry')
--BEGIN
--CREATE DATABASE Pantry COLLATE LATIN1_GENERAL_CI_AS
---- ATENÇÃO QUE TEM TAMBÉM QUE SE ALTERAR A COLLATION NAS PROPRIEDADES DESTE PROJETO
--END 


--IF (EXISTS (SELECT *
--   FROM INFORMATION_SCHEMA.TABLES
--   WHERE TABLE_SCHEMA = 'Pantry'
--   AND TABLE_NAME = 'Produto'))
--   BEGIN
--      DROP TABLE Produto;
--   END; 

--  IF (EXISTS (SELECT *
--   FROM INFORMATION_SCHEMA.TABLES
--   WHERE TABLE_SCHEMA = 'Pantry'
--   AND TABLE_NAME = 'Categoria'))
--   BEGIN
--      DROP TABLE Categoria;
--   END;
   
--   IF (EXISTS (SELECT *
--   FROM INFORMATION_SCHEMA.TABLES
--   WHERE TABLE_SCHEMA = 'Pantry'
--   AND TABLE_NAME = 'Utilizadores'))
--   BEGIN
--      DROP TABLE Utilizadores;
--   END; 
GO

GO
PRINT N'Rename refactoring operation with key d60e2da2-5bf4-4bae-99a2-b1a53ec7a869 is skipped, element [dbo].[Categoria].[Id] (SqlSimpleColumn) will not be renamed to Codigo';


GO
PRINT N'Rename refactoring operation with key 08ac0892-693a-4219-b083-0ec215d87a4d is skipped, element [dbo].[Produto].[Categoria] (SqlSimpleColumn) will not be renamed to CodigoCategoria';


GO
PRINT N'Creating [dbo].[Categoria]...';


GO
CREATE TABLE [dbo].[Categoria] (
    [Codigo]    INT           IDENTITY (1, 1) NOT NULL,
    [Descricao] NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Codigo] ASC)
);


GO
PRINT N'Creating [dbo].[Produto]...';


GO
CREATE TABLE [dbo].[Produto] (
    [Codigo]           INT             IDENTITY (1, 1) NOT NULL,
    [Descricao]        NVARCHAR (250)  NOT NULL,
    [Preco]            DECIMAL (18, 2) NOT NULL,
    [QuantidadeAtual]  INT             NOT NULL,
    [QuantidadeMaxima] INT             NOT NULL,
    [QuantidadeMinima] INT             NOT NULL,
    [CodigoCategoria]  INT             NOT NULL,
    [DataCompra]       DATETIME        NOT NULL,
    CONSTRAINT [PK_Produto] PRIMARY KEY CLUSTERED ([Codigo] ASC)
);


GO
PRINT N'Creating [dbo].[Utilizadores]...';


GO
CREATE TABLE [dbo].[Utilizadores] (
    [Id]       INT           IDENTITY (1, 1) NOT NULL,
    [Username] NVARCHAR (50) NOT NULL,
    [Password] BINARY (64)   NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[FK_Produto_Categoria]...';


GO
ALTER TABLE [dbo].[Produto] WITH NOCHECK
    ADD CONSTRAINT [FK_Produto_Categoria] FOREIGN KEY ([CodigoCategoria]) REFERENCES [dbo].[Categoria] ([Codigo]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'd60e2da2-5bf4-4bae-99a2-b1a53ec7a869')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('d60e2da2-5bf4-4bae-99a2-b1a53ec7a869')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '08ac0892-693a-4219-b083-0ec215d87a4d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('08ac0892-693a-4219-b083-0ec215d87a4d')

GO

GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
--DELETE FROM PRODUTO;
--DELETE FROM CATEGORIA;
--DELETE FROM UTILIZADORES; 

IF NOT EXISTS(SELECT [Descricao] FROM [dbo].[Categoria])
BEGIN 
INSERT INTO [dbo].[Categoria] ([Descricao])
     VALUES
           ('mercearia'),
           ('frescos'),
           ('higiene')
END


IF NOT EXISTS(SELECT [Id] FROM [dbo].[Utilizadores])
BEGIN 
INSERT INTO [dbo].[Utilizadores] ([Username], [Password])
     VALUES
           ('user1', HASHBYTES('SHA2_512', '123456')),
           ('admin', HASHBYTES('SHA2_512', '123456'))
END


IF NOT EXISTS(SELECT [Codigo] FROM [dbo].[Produto])
BEGIN 
INSERT INTO [dbo].[Produto] ([Descricao]
           ,[Preco]
           ,[QuantidadeAtual]
           ,[QuantidadeMaxima]
           ,[QuantidadeMinima]
           ,[DataCompra]
           ,[CodigoCategoria])
     VALUES
           ('massa', 0.8, 2, 5, 2, GETDATE(), 1),
           ('arroz', 1.1, 5, 3, 3, GETDATE(), 1),
           ('courget', 1.9, 3, 3, 3, GETDATE(), 2)
END




GO

GO
